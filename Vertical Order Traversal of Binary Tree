/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> verticalTraversal(TreeNode* root) {
        map<int, vector< pair<int,int> > >help;
        vector< vector<int> >sol ;
        
        queue< pair<TreeNode*,pair<int,int> > > q;
    
        
        if(root)q.push({root,{0,0}});
        
        while(q.size()){
            auto v=q.front().first;
            auto h=q.front().second;
            q.pop();
            
            help[h.first].push_back({h.second,v->val});
            if(v->right)q.push({v->right,{h.first+1,h.second+1}});
            if(v->left) q.push({v->left,{h.first-1,h.second+1}});
            
        }
        
        for(auto it:help) if(it.second.size() > 0){
            sort(it.second.begin(),it.second.end());
            vector<int> x;
            for(auto v:it.second) x.push_back(v.second);
            sol.push_back(x);
        }
        
        return sol;
    }
};
