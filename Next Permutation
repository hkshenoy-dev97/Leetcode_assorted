class Solution {
public:
    bool chk_sorted(vector<int> nums){
        for(int i=1;i<nums.size();i++) if(nums[i] > nums[i-1]) return 0;
        return 1;
    }
    void nextPermutation(vector<int>& nums) {
        int n=nums.size();
        
        if(chk_sorted(nums)){
            sort(nums.begin(),nums.end());
            return ;
        }
        for(int i=n-2;i>=0;i--){
            if(nums[i] < nums[i+1]){
                int g_m=INT_MAX,g_ind=i;
                
                for(int j=i+1;j<n;j++){
                    if(nums[j] > nums[i]){
                        if(nums[j] < g_m){
                            g_m=nums[j];
                            g_ind=j;
                        }
                    }
                }
                swap(nums[i],nums[g_ind]);
                sort(nums.begin()+i+1,nums.end());
                
                
                
                break;
            }
        }
        
    }
};
