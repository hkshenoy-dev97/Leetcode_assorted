class Solution {
public:
    int kthLargestValue(vector<vector<int>>& matrix, int k) {
        int n=matrix.size();
        int m=matrix[0].size();
        
        int c_xor[n+1][m+1];
        c_xor[0][0]=matrix[0][0];
        
        for(int i=1;i<m;i++)c_xor[0][i]=(c_xor[0][i-1] ^ matrix[0][i]);
        for(int i=1;i<n;i++)c_xor[i][0]=(c_xor[i-1][0] ^ matrix[i][0]);
        
        vector<int> sol;
        for(int i=1;i<n;i++){
            for(int j=1;j<m;j++){
                c_xor[i][j]=(c_xor[i-1][j]^c_xor[i][j-1]^c_xor[i-1][j-1]^matrix[i][j]);
            }
        }
        
        for(int i=0;i<n;i++)for(int j=0;j<m;j++)sol.push_back(c_xor[i][j]);
        sort(sol.begin(),sol.end());
        reverse(sol.begin(),sol.end());

        return sol[k-1];
        
    }
};
